name: test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        os:
          - "ubuntu-18.04"
          - "ubuntu-16.04"
          - "macos-10.15"
        bazel:
          - "3.2.0"
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Bazel (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get install --no-install-recommends g++ unzip zip default-jdk-headless
          curl -fLO "https://github.com/bazelbuild/bazel/releases/download/${{ matrix.bazel }}/bazel-${{ matrix.bazel }}-installer-linux-x86_64.sh"
          chmod +x "bazel-${{ matrix.bazel }}-installer-linux-x86_64.sh"
          sudo ./bazel-${{ matrix.bazel }}-installer-linux-x86_64.sh
      - name: Install Bazel (macOS)
        if: startsWith(matrix.os, 'macos-')
        run: |
          curl -fLO "https://github.com/bazelbuild/bazel/releases/download/${{ matrix.bazel }}/bazel-${{ matrix.bazel }}-installer-darwin-x86_64.sh"
          chmod +x "bazel-${{ matrix.bazel }}-installer-darwin-x86_64.sh"
          sudo ./bazel-${{ matrix.bazel }}-installer-darwin-x86_64.sh
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Build
        run: bazel build //...
      - name: Run tests
        run: bazel test --keep_going --test_strategy=exclusive --build_event_json_file=$PWD/build-events.jsonl //...
      - name: Render test reports
        run: bazel run //contest:render_test_results -- $PWD/build-events.jsonl
